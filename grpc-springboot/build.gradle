apply plugin: 'com.google.protobuf'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'


dependencies {
    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"

    compile "org.lognet:grpc-spring-boot-starter:${grpcspringBootVersion}"
    
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"
    compile "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"

    compile "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    compile "io.projectreactor:reactor-core:${reactorVersion}"

    compile project(':common')

    testCompile 'org.springframework.boot:spring-boot-starter-aop'
    testCompile('org.springframework.boot:spring-boot-starter-test')



}

sourceSets {
    main {
        java {
            srcDir 'src/main/generated'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'generated'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'generated'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task cleanProtoGen {
    doFirst {
        delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen