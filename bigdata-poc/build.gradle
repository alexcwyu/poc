buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.1"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.5'
    }
}

plugins {
    id "com.google.protobuf"
    //id "com.commercehub.gradle.plugin.avro-base"
}

apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
//apply plugin: 'org.springframework.boot'
apply plugin: "com.commercehub.gradle.plugin.avro-base"

dependencies {
    compile project(':common')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"

    compile group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"

    compile group: 'net.openhft', name: 'chronicle', version: '3.6.4'
    compile group: 'net.openhft', name: 'chronicle-queue', version: '4.6.91'
    compile group: 'net.openhft', name: 'chronicle-map', version: '3.14.5'

    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

    compile group: 'org.springframework', name: 'spring-core', version: "${springVersion}"

    //serialization
    compile group: 'com.google.flatbuffers', name: 'flatbuffers-java', version: "${flatbuffersVersion}"
    compile group: 'com.google.flatbuffers', name: 'flatbuffers-java-grpc', version: "${flatbuffersVersion}"
    compile group: 'com.esotericsoftware.kryo', name: 'kryo', version: "${kryoVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufVersion}"

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${jacksonVersion}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"

    compile group: 'org.apache.avro', name: 'avro', version: "${avroVersion}"
    compile group: 'org.apache.avro', name: 'avro-compiler', version: "${avroVersion}"

    //rxjava
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: "${rxJavaVersion}"

    //akka
    compile group: 'com.typesafe.akka', name: 'akka-stream_2.12', version: "${akkaVersion}"
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.12', version: "${akkaVersion}"

    //reactor
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.6.RELEASE'

    //disruptor
    compile group: 'com.lmax', name: 'disruptor', version: "${disruptorVersion}"

    //grpc
    compile group: 'io.grpc', name: 'grpc-protobuf', version: "${grpcVersion}"
    compile group: 'io.grpc', name: 'grpc-netty', version: "${grpcVersion}"

    //kafka
    compile group: 'org.springframework.kafka', name: 'spring-kafka', version: '2.1.5.RELEASE'

    compile group: 'io.confluent', name: 'common-config', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'common-utils', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'confluent-serializers-new', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'kafka-streams-avro-serde', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'kafka-rest', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'kafka-schema-registry-client', version: "${confluentVersion}"
    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: "${confluentVersion}"

    //samza
    compile group: 'org.apache.samza', name: 'samza-api', version: "${samzaVersion}"
    compile group: 'org.apache.samza', name: 'samza-core_2.11', version: "${samzaVersion}"
    compile group: 'org.apache.samza', name: 'samza-kv_2.11', version: "${samzaVersion}"
    compile group: 'org.apache.samza', name: 'samza-kv-rocksdb_2.11', version: "${samzaVersion}"
    compile group: 'org.apache.samza', name: 'samza-kv-inmemory_2.11', version: "${samzaVersion}"
    compile group: 'org.apache.samza', name: 'samza-kafka_2.11', version: "${samzaVersion}"

    //kafka
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: "${kafkaVersion}"
    compile group: 'org.apache.kafka', name: 'kafka-streams', version: "${kafkaVersion}"
    compile group: 'org.apache.kafka', name: 'connect-api', version: "${kafkaVersion}"
    compile group: 'org.apache.kafka', name: 'connect-json', version: "${kafkaVersion}"
    compile group: 'org.apache.kafka', name: 'connect-file', version: "${kafkaVersion}"

    //cassandra
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: "${datastaxVersion}"
    compile group: 'org.apache.cassandra', name: 'cassandra-all', version: "${cassandraVersion}"

    //rocksdb
    compile group: 'org.rocksdb', name: 'rocksdbjni', version: "${rocksDBVersion}"

    //flink
    compile group: 'org.apache.flink', name: 'flink-clients_2.11', version: "${flinkVersion}"
    compile group: 'org.apache.flink', name: 'flink-java', version: "${flinkVersion}"
    compile group: 'org.apache.flink', name: 'flink-streaming-java_2.11', version: "${flinkVersion}"

    //spark
    compile group: 'org.apache.spark', name: 'spark-sql_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-core_2.11', version: "${sparkVersion}"
    compile group: 'org.apache.spark', name: 'spark-streaming_2.11', version: "${sparkVersion}"

    //ignite
    compile group: 'org.apache.ignite', name: 'ignite-core', version: "${igniteVersion}"
    compile group: 'org.apache.ignite', name: 'ignite-cassandra-store', version: "${igniteVersion}"

    //elasticSearch
    compile group: 'org.elasticsearch', name: 'elasticsearch', version: "${elasticsearchVersion}"
    compile group: 'org.elasticsearch', name: 'elasticsearch-spark-20_2.11', version: "${elasticsearchVersion}"

    //influx
    compile group: 'org.influxdb', name: 'influxdb-java', version: "${influxDBVersion}"

    //postgresql
    compile group: 'org.postgresql', name: 'postgresql', version: "${postgresqlVersion}"

    //redis
    compile group: 'redis.clients', name: 'jedis', version: "${jedisVersion}"
}


protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            // Here you can configure the task
        }
    }
    generatedFilesBaseDir = "${projectDir}/generated/"
}


task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("generated/main/java")
}


clean {
    delete protobuf.generatedFilesBaseDir
}


idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}");
    }
}


sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/proto'
        }
        java {
            srcDirs = ['src/main/java', 'generated/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

compileJava {
    dependsOn tasks.generateAvro
    //dependsOn tasks.generateProto
}


avro {
    stringType = "string"
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}