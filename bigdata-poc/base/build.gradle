buildscript {

    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
        classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:0.14.1"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
    }
}

//plugins {
//    id "com.google.protobuf"
//    //id "com.commercehub.gradle.plugin.avro-base"
//}
apply plugin: 'scala'
apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'
//apply plugin: 'org.springframework.boot'
apply plugin: "com.commercehub.gradle.plugin.avro-base"
apply plugin: 'com.google.protobuf'

dependencies {
    compile project(':common')
    compile group: 'org.scala-lang', name: 'scala-library', version: "${scalaVersion}"
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

    compile group: 'org.apache.logging.log4j', name: 'log4j-jcl', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: "${log4jVersion}"
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: "${log4jVersion}"

    compile group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"

    compile group: 'net.openhft', name: 'chronicle', version: '3.6.4'
    compile group: 'net.openhft', name: 'chronicle-queue', version: '4.6.91'
    compile group: 'net.openhft', name: 'chronicle-map', version: '3.14.5'

    compile group: 'org.apache.commons', name: 'commons-csv', version: '1.5'

    compile group: 'org.springframework', name: 'spring-core', version: "${springVersion}"
    compile group: 'org.springframework', name: 'spring-webmvc', version: "${springVersion}"
    compile group: 'org.springframework', name: 'spring-web', version: "${springVersion}"
    compile group: 'org.springframework', name: 'spring-websocket', version: "${springVersion}"

    compile group: 'org.hibernate', name: 'hibernate-core', version: "${hibernateVersion}"
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: "${hibernateVersion}"

    compile group: 'org.springframework.data', name: 'spring-data-jpa', version: "${springDataVersion}"
    compile group: 'org.springframework.data', name: 'spring-data-cassandra', version: "${springDataVersion}"
    compile group: 'org.springframework.data', name: 'spring-data-rest-webmvc', version: '3.0.7.RELEASE'
    compile group: 'org.jboss.resteasy', name: 'resteasy-jaxrs', version: "${resteasyVersion}"
    //compile group: 'org.jboss.resteasy', name: 'resteasy-jackson2-provider', version: "${resteasyVersion}"
    compile group: 'org.jboss.resteasy', name: 'resteasy-undertow',  version: "${resteasyVersion}"

    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

    //swagger
    compile group: 'io.swagger.core.v3', name: 'swagger-core', version: "${swaggerVersion}"
    compile group: 'io.swagger.core.v3', name: 'swagger-models', version: "${swaggerVersion}"
    compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2', version: "${swaggerVersion}"
    compile group: 'io.swagger.core.v3', name: 'swagger-annotations', version: "${swaggerVersion}"
    compile group: 'io.swagger.core.v3', name: 'swagger-jaxrs2-servlet-initializer', version: "${swaggerVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger2', version: "${springfoxVersion}"
    compile group: 'io.springfox', name: 'springfox-swagger-ui', version: "${springfoxVersion}"

    //serialization
    //compile group: 'com.google.flatbuffers', name: 'flatbuffers-java', version: "${flatbuffersVersion}"
    //compile group: 'com.google.flatbuffers', name: 'flatbuffers-java-grpc', version: "${flatbuffersVersion}"
    compile group: 'com.esotericsoftware', name: 'kryo', version: "${kryoVersion}"
    compile group: 'com.google.protobuf', name: 'protobuf-java', version: "${protobufVersion}"
    compile group: 'io.protostuff', name: 'protostuff-core', version: "${protostuffVersion}"
    compile group: 'io.protostuff', name: 'protostuff-runtime', version: "${protostuffVersion}"


    compile group: 'org.apache.avro', name: 'avro', version: "${avroVersion}"
    compile group: 'org.apache.avro', name: 'avro-compiler', version: "${avroVersion}"

    //rxjava
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: "${rxJavaVersion}"

    //akka
    compile group: 'com.typesafe.akka', name: 'akka-stream_2.11', version: "${akkaVersion}"
    compile group: 'com.typesafe.akka', name: 'akka-actor_2.11', version: "${akkaVersion}"

    //reactor
    compile group: 'io.projectreactor', name: 'reactor-core', version: '3.1.6.RELEASE'

    //disruptor
    compile group: 'com.lmax', name: 'disruptor', version: "${disruptorVersion}"

    //grpc
    compile group: 'io.grpc', name: 'grpc-protobuf', version: "${grpcVersion}"
    compile group: 'io.grpc', name: 'grpc-netty', version: "${grpcVersion}"
    
    //cassandra
    compile group: 'com.datastax.cassandra', name: 'cassandra-driver-core', version: "${datastaxVersion}"
    compile group: 'org.apache.cassandra', name: 'cassandra-all', version: "${cassandraVersion}"

    //rocksdb
    compile group: 'org.rocksdb', name: 'rocksdbjni', version: "${rocksDBVersion}"

    //influx
    compile group: 'org.influxdb', name: 'influxdb-java', version: "${influxDBVersion}"

    //postgresql
    compile group: 'org.postgresql', name: 'postgresql', version: "${postgresqlVersion}"

    //redis
    compile group: 'redis.clients', name: 'jedis', version: "${jedisVersion}"

    //undertow
    compile group: 'io.undertow', name: 'undertow-core', version: "${undertowVersion}"
    compile group: 'io.undertow', name: 'undertow-servlet', version: "${undertowVersion}"
}

configurations {
    // exclude Tomcat
    //compile.exclude module: 'spring-boot-starter-tomcat'
    //all*.exclude module : 'spring-boot-starter-logging'

    all {
        resolutionStrategy.force group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.6.7'
        resolutionStrategy.force group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.7'
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    generateProtoTasks {
        all().each { task ->
            // Here you can configure the task
        }
    }
    generatedFilesBaseDir = "${projectDir}/generated/"
}


task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
    source("src/main/resources/avro")
    outputDir = file("generated/main/java")
}


clean {
    delete protobuf.generatedFilesBaseDir
}


idea {
    module {
        sourceDirs += file("${protobuf.generatedFilesBaseDir}");
    }
}


sourceSets {
    main {
        proto {
            srcDir 'src/main/resources/proto'
        }
        java {
            srcDirs = ['src/main/java', 'generated/main/java']
        }
        scala {
            srcDirs = ['src/main/scala']
        }

        resources {
            srcDirs = ['src/main/resources']
        }
    }
}


avro {
    stringType = "string"
}

compileJava {
    dependsOn tasks.generateAvro
    //dependsOn tasks.generateProto
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}