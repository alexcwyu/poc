// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: instrument.proto

package net.alexyu.poc.model.proto;

public interface InstrumentOrBuilder extends
    // @@protoc_insertion_point(interface_extends:Instrument)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>string inst_id = 1;</code>
   */
  java.lang.String getInstId();
  /**
   * <code>string inst_id = 1;</code>
   */
  com.google.protobuf.ByteString
      getInstIdBytes();

  /**
   * <code>string symbol = 2;</code>
   */
  java.lang.String getSymbol();
  /**
   * <code>string symbol = 2;</code>
   */
  com.google.protobuf.ByteString
      getSymbolBytes();

  /**
   * <code>string exch_id = 3;</code>
   */
  java.lang.String getExchId();
  /**
   * <code>string exch_id = 3;</code>
   */
  com.google.protobuf.ByteString
      getExchIdBytes();

  /**
   * <code>string name = 4;</code>
   */
  java.lang.String getName();
  /**
   * <code>string name = 4;</code>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>.Instrument.InstType type = 5;</code>
   */
  int getTypeValue();
  /**
   * <code>.Instrument.InstType type = 5;</code>
   */
  net.alexyu.poc.model.proto.Instrument.InstType getType();

  /**
   * <code>string ccy_id = 6;</code>
   */
  java.lang.String getCcyId();
  /**
   * <code>string ccy_id = 6;</code>
   */
  com.google.protobuf.ByteString
      getCcyIdBytes();

  /**
   * <code>string country_id = 7;</code>
   */
  java.lang.String getCountryId();
  /**
   * <code>string country_id = 7;</code>
   */
  com.google.protobuf.ByteString
      getCountryIdBytes();

  /**
   * <code>int32 gics_sector = 11;</code>
   */
  int getGicsSector();

  /**
   * <code>int32 gics_industry_group = 12;</code>
   */
  int getGicsIndustryGroup();

  /**
   * <code>int32 gics_industry = 13;</code>
   */
  int getGicsIndustry();

  /**
   * <code>int32 gics_sub_industry = 14;</code>
   */
  int getGicsSubIndustry();

  /**
   * <code>string und_inst_id = 31;</code>
   */
  java.lang.String getUndInstId();
  /**
   * <code>string und_inst_id = 31;</code>
   */
  com.google.protobuf.ByteString
      getUndInstIdBytes();

  /**
   * <code>.Instrument.OptionType option_type = 32;</code>
   */
  int getOptionTypeValue();
  /**
   * <code>.Instrument.OptionType option_type = 32;</code>
   */
  net.alexyu.poc.model.proto.Instrument.OptionType getOptionType();

  /**
   * <code>.Instrument.OptionStyle option_style = 33;</code>
   */
  int getOptionStyleValue();
  /**
   * <code>.Instrument.OptionStyle option_style = 33;</code>
   */
  net.alexyu.poc.model.proto.Instrument.OptionStyle getOptionStyle();

  /**
   * <code>double strike = 34;</code>
   */
  double getStrike();

  /**
   * <pre>
   *yyyyMMdd
   * </pre>
   *
   * <code>int32 exp_date = 35;</code>
   */
  int getExpDate();

  /**
   * <code>double conversion_ratio = 36;</code>
   */
  double getConversionRatio();

  /**
   * <code>map&lt;string, string&gt; alt_exch_ids = 51;</code>
   */
  int getAltExchIdsCount();
  /**
   * <code>map&lt;string, string&gt; alt_exch_ids = 51;</code>
   */
  boolean containsAltExchIds(
      java.lang.String key);
  /**
   * Use {@link #getAltExchIdsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAltExchIds();
  /**
   * <code>map&lt;string, string&gt; alt_exch_ids = 51;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAltExchIdsMap();
  /**
   * <code>map&lt;string, string&gt; alt_exch_ids = 51;</code>
   */

  java.lang.String getAltExchIdsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; alt_exch_ids = 51;</code>
   */

  java.lang.String getAltExchIdsOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; alt_symbols = 52;</code>
   */
  int getAltSymbolsCount();
  /**
   * <code>map&lt;string, string&gt; alt_symbols = 52;</code>
   */
  boolean containsAltSymbols(
      java.lang.String key);
  /**
   * Use {@link #getAltSymbolsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAltSymbols();
  /**
   * <code>map&lt;string, string&gt; alt_symbols = 52;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAltSymbolsMap();
  /**
   * <code>map&lt;string, string&gt; alt_symbols = 52;</code>
   */

  java.lang.String getAltSymbolsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; alt_symbols = 52;</code>
   */

  java.lang.String getAltSymbolsOrThrow(
      java.lang.String key);

  /**
   * <code>map&lt;string, string&gt; alt_classifications = 53;</code>
   */
  int getAltClassificationsCount();
  /**
   * <code>map&lt;string, string&gt; alt_classifications = 53;</code>
   */
  boolean containsAltClassifications(
      java.lang.String key);
  /**
   * Use {@link #getAltClassificationsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String>
  getAltClassifications();
  /**
   * <code>map&lt;string, string&gt; alt_classifications = 53;</code>
   */
  java.util.Map<java.lang.String, java.lang.String>
  getAltClassificationsMap();
  /**
   * <code>map&lt;string, string&gt; alt_classifications = 53;</code>
   */

  java.lang.String getAltClassificationsOrDefault(
      java.lang.String key,
      java.lang.String defaultValue);
  /**
   * <code>map&lt;string, string&gt; alt_classifications = 53;</code>
   */

  java.lang.String getAltClassificationsOrThrow(
      java.lang.String key);
}
