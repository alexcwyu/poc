buildscript {

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}"
    }
}
apply plugin: 'com.google.protobuf'
apply plugin: 'kotlin'

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"

    compile "io.grpc:grpc-stub:${grpcVersion}"
    compile "io.grpc:grpc-protobuf:${grpcVersion}"
    compile "io.grpc:grpc-netty:${grpcVersion}"

    //spark
    compile "org.apache.spark:spark-core_2.11:${sparkVersion}"
    compile "org.apache.spark:spark-sql_2.11:${sparkVersion}"
    compile "org.apache.spark:spark-mllib_2.11:${sparkVersion}"
    compile "org.apache.spark:spark-streaming_2.11:${sparkVersion}"
    
//    //kafka
//    compile group: 'io.confluent', name: 'common-config', version: "${confluentVersion}"
//    compile group: 'io.confluent', name: 'common-utils', version: "${confluentVersion}"
//    compile group: 'io.confluent', name: 'confluent-serializers-new', version: "${confluentVersion}"
//    compile group: 'io.confluent', name: 'kafka-streams-avro-serde', version: "${confluentVersion}"
//    compile (group: 'io.confluent', name: 'kafka-rest', version: "${confluentVersion}"){
//        exclude group:"com.fasterxml.jackson.core"
//    }
//    compile group: 'io.confluent', name: 'kafka-schema-registry-client', version: "${confluentVersion}"
//    compile group: 'io.confluent', name: 'kafka-avro-serializer', version: "${confluentVersion}"
//
//    compile (group: 'org.apache.kafka', name: 'kafka-clients', version: "${kafkaVersion}"){
//        exclude group:"com.fasterxml.jackson.core"
//    }
//    compile (group: 'org.apache.kafka', name: 'kafka-streams', version: "${kafkaVersion}")
//    compile group: 'org.apache.kafka', name: 'connect-api', version: "${kafkaVersion}"
//    compile group: 'org.apache.kafka', name: 'connect-json', version: "${kafkaVersion}"
//    compile group: 'org.apache.kafka', name: 'connect-file', version: "${kafkaVersion}"
//
//    //flink
//    compile group: 'org.apache.flink', name: 'flink-clients_2.11', version: "${flinkVersion}"
//    compile group: 'org.apache.flink', name: 'flink-java', version: "${flinkVersion}"
//    compile group: 'org.apache.flink', name: 'flink-streaming-java_2.11', version: "${flinkVersion}"

    //postgresql
    compile group: 'org.postgresql', name: 'postgresql', version: "${postgresqlVersion}"
    //postgresql
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "2.6.7"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.6.7'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.6.7'

    compile project(':common')
}

sourceSets {
    main {

        java {
            srcDirs = ['src/main/java', 'src/main/generated']
        }
        kotlin {
            srcDirs = ['src/main/kotlin']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}



compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }

    generateProtoTasks {
        ofSourceSet('main').each { task ->
            task.builtins {
                java {
                    outputSubDir = 'generated'
                }
            }
            task.plugins {
                grpc {
                    outputSubDir = 'generated'
                }
            }
        }
    }
    generatedFilesBaseDir = "$projectDir/src/"
}

task cleanProtoGen {
    doFirst {
        delete("$projectDir/src/main/protoGen")
    }
}
clean.dependsOn cleanProtoGen